package collector

func init() {
	NewCollector(NewMetricGlobalCollector())
}

func NewMetricGlobalCollector() (string, Collector) {
	var m MetricCollector
	m.subName = "realtime"
	m.metricPath = []string{
		"sp.*.blockCache.global.summary.cleanPages",
		"sp.*.blockCache.global.summary.dirtyBytes",
		"sp.*.blockCache.global.summary.dirtyPages",
		"sp.*.blockCache.global.summary.flushedBlocks",
		"sp.*.blockCache.global.summary.flushes",
		"sp.*.blockCache.global.summary.freePages",
		"sp.*.blockCache.global.summary.maxPages",
		"sp.*.blockCache.global.summary.readHits",
		"sp.*.blockCache.global.summary.readHitsRate",
		"sp.*.blockCache.global.summary.readMisses",
		"sp.*.blockCache.global.summary.readMissesRate",
		"sp.*.blockCache.global.summary.writeHits",
		"sp.*.blockCache.global.summary.writeHitsRate",
		"sp.*.blockCache.global.summary.writeMisses",
		"sp.*.blockCache.global.summary.writeMissesRate",
		"sp.*.cpu.summary.busyTicks",
		"sp.*.cpu.summary.utilization",
		"sp.*.cpu.summary.waitTicks",
		"sp.*.cpu.uptime",
		"sp.*.fibreChannel.blockSize",
		"sp.*.net.basic.inBytes",
		"sp.*.net.basic.inBytesRate",
		"sp.*.net.basic.outBytes",
		"sp.*.net.basic.outBytesRate",
		"sp.*.memory.bufferCache.freeBufferBytes",
		"sp.*.memory.bufferCache.highWatermarkHits",
		"sp.*.memory.bufferCache.hits",
		"sp.*.memory.bufferCache.lookups",
		"sp.*.memory.bufferCache.lowWatermarkHits",
		"sp.*.memory.bufferCache.watermarkHits",
		"sp.*.memory.pageSize",
		"sp.*.memory.summary.freeBytes",
		"sp.*.memory.summary.swapFreeBytes",
		"sp.*.memory.summary.swapTotalUsedBytes",
		"sp.*.memory.summary.totalBytes",
		"sp.*.memory.summary.totalUsedBytes",
		"sp.*.platform.storageProcessorTemperature",
		"sp.*.cifs.global.basic.readAvgSize",
		"sp.*.cifs.global.basic.readBytes",
		"sp.*.cifs.global.basic.readBytesRate",
		"sp.*.cifs.global.basic.reads",
		"sp.*.cifs.global.basic.readsRate",
		"sp.*.cifs.global.basic.totalCalls",
		"sp.*.cifs.global.basic.totalCallsRate",
		"sp.*.cifs.global.basic.writeAvgSize",
		"sp.*.cifs.global.basic.writeBytes",
		"sp.*.cifs.global.basic.writeBytesRate",
		"sp.*.cifs.global.basic.writes",
		"sp.*.cifs.global.basic.writesRate",
		"sp.*.cifs.global.usage.currentConnections",
		"sp.*.cifs.global.usage.currentOpenFiles",
		"sp.*.nfs.basic.readAvgSize",
		"sp.*.nfs.basic.readBytes",
		"sp.*.nfs.basic.readBytesRate",
		"sp.*.nfs.basic.reads",
		"sp.*.nfs.basic.readsRate",
		"sp.*.nfs.basic.writeAvgSize",
		"sp.*.nfs.basic.writeBytes",
		"sp.*.nfs.basic.writeBytesRate",
		"sp.*.nfs.basic.writes",
		"sp.*.nfs.basic.writesRate",
		"sp.*.nfs.currentThreads",
		"sp.*.nfs.maxUsedThreads",
		"sp.*.nfs.totalCalls",
		"sp.*.nfs.totalCallsRate",
		"sp.*.storage.filesystemSummary.readBytes",
		"sp.*.storage.filesystemSummary.reads",
		"sp.*.storage.filesystemSummary.writeBytes",
		"sp.*.storage.filesystemSummary.writes",
	}

	m.GenerateCollector()

	return m.subName, &m
}
